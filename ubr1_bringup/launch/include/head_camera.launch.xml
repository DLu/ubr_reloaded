<launch>

  <arg name="rgb_camera_info_url"   default="" />
  <arg name="depth_camera_info_url" default="" />

  <param name="head_camera/driver/data_skip" value="1" /> <!-- throttle to 15Hz -->

  <include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="camera" value="head_camera"/>
    <arg name="rgb_frame_id" value="head_camera_rgb_optical_frame"/>
    <arg name="depth_frame_id" value="head_camera_depth_optical_frame"/>
    <arg name="rgb_camera_info_url" value="$(arg rgb_camera_info_url)" />
    <arg name="depth_camera_info_url" value="$(arg depth_camera_info_url)" />
    <arg name="publish_tf" value="false"/>
    <arg name="depth_registration" value="true"/>
  </include>

  <group ns="head_camera">

    <!-- decimated to 160x120 -->
    <node pkg="nodelet" type="nodelet" name="crop_decimate" args="load image_proc/crop_decimate /head_camera/head_camera_nodelet_manager" output="screen">
      <remap from="camera/image_raw" to="depth/image_rect_raw" />
      <remap from="camera/camera_info" to="depth/camera_info" />
      <remap from="camera_out" to="depth_downsample" />
      <param name="decimation_x" value="4" />
      <param name="decimation_y" value="4" />
      <param name="queue_size" value="1" />
    </node>

    <!-- downsampled XYZ point cloud (mainly for navigation) -->
    <node pkg="nodelet" type="nodelet" name="points_downsample"
          args="load depth_image_proc/point_cloud_xyz /head_camera/head_camera_nodelet_manager"
          ns="depth_downsample">
      <remap from="image_rect" to="image_raw"/>
    </node>

    <!-- filtered downsampled -->
    <node pkg="nodelet" type="nodelet" name="points_filter" args="load pcl/PassThrough /head_camera/head_camera_nodelet_manager" output="screen">
      <remap from="~input" to="depth_downsample/points" />
      <remap from="~output" to="depth_downsample/points_filtered" />
      <rosparam>
        filter_field_name: z
        filter_limit_min: 1.0
        filter_limit_max: 3.0
        filter_limit_negative: False
      </rosparam>
    </node>

  </group>

</launch>
